#*********************************************************************
# Copyright (c) Intel Corporation 2020
# SPDX-License-Identifier: Apache-2.0
#*********************************************************************/

# This is a basic workflow to help you get started with Actions

name: Docs-Build

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
permissions:
  contents: read

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    permissions:
      contents: write # for Git to git push
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
        with:
          python-version: "3.11"
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: |
          pip install -r ./requirements.txt --require-hashes
          mkdocs build --strict
      #checkout the gh-pages branch
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          path: "to-be-published"
          ref: "gh-pages"
      #copy the built site content
      - name: Copy
        if: ${{ github.ref == 'refs/heads/main' }}
        run: cp -rlf site/* ./to-be-published/
      #publish it
      - name: Publish content
        if: ${{ github.ref == 'refs/heads/main' }}
        env:
          MESSAGE: ${{github.event.head_commit.message}}
        run: |
          cd ./to-be-published
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m 'ci: ${{env.MESSAGE}}'
          git push origin gh-pages
